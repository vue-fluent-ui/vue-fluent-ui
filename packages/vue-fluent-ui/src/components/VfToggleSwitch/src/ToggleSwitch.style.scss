@use "@/styles/mixins/mixins" as *;

$block: 'toggle-switch';
@include b($block) {
  display: inline-block;
  min-width: 154px;
  // 隐藏input
  @include e(input) {
    position: absolute;
    overflow: hidden;
    clip: rect(0 0 0 0);
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    white-space: nowrap;
    border: 0;
    $focus-target: "." + be($block, "container");

    &:focus-visible ~ #{$focus-target} {
      &::after {
        opacity: 1;
        border-color: token('stroke-focus-outer');
      }
    }
  }


  @include e(wrapper) {
    font-size: 14px;
    display: inline-flex;
    align-items: center;
    cursor: pointer;
    color: token('text-primary');
    border-radius: token('radius-control-corner');
  }
  @include e(container) {
    position: relative;
    display: inline-flex;
    align-items: center;
    padding: 5px 0;
    border-radius: token('radius-control-corner');
    gap: 12px;

    &::after {
      position: absolute;
      top: -3px;
      right: -7px;
      bottom: -3px;
      left: -7px;
      content: '';
      pointer-events: none;
      opacity: 0;
      border: 2px solid transparent;
      border-radius: token('radius-overlay-corner');
    }
  }
  @include e(track) {
    position: relative;
    display: inline-block;
    flex-shrink: 0;
    box-sizing: border-box;
    width: 40px;
    height: 20px;
    transition-timing-function: token("easing-control-fast-out-slow-in-key-spline");
    transition-duration: token('duration-control-fast-animation');
    transition-property: background-color, border-color;
    border: 1px solid token('stroke-control-strong-default');
    border-radius: 10px; // winui3这里是写死的
    background-color: token('fill-control-alt-secondary');
  }
  @include e(knob) {
    position: absolute;
    top: -1px;
    left: -1px;
    width: 22px;
    height: 20px;
    transition-timing-function: token("easing-control-fast-out-slow-in-key-spline");
    transition-duration: token('duration-control-fast-animation');
    transition-property: transform, background-color, clip-path;
    transform: translateX(0);
    border-radius: 20px;
    background-color: token('text-secondary');
    clip-path: inset(4px 6px 4px 4px round 20px);
  }

  // On
  @include when(on) {
    @include e(track) {
      border-color: token('fill-accent-default');
      // 避免引起布局抖动
      background-color: token('fill-accent-default');
    }
    @include e(knob) {
      transform: translateX(20px);
      background-color: token('text-on-accent-fill-color-primary');
    }

  }

  @include when-not(disabled) {
    &:hover {
      @include e(knob) {
        clip-path: inset(3px 5px 3px 3px round 20px);
      }
      @include e(track) {
        background-color: token('fill-control-alt-tertiary');
      }
      // On
      @include when(on) {
        @include e(track) {
          border-color: token('fill-accent-secondary');
          background-color: token('fill-accent-secondary');
        }

      }
    }
    &:active {
      @include e(knob) {
        clip-path: inset(3px round 20px);
      }
      @include e(track) {
        background-color: token('fill-control-alt-quarternary');
      }
      // On
      @include when(on) {
        @include e(track) {
          border-color: token('fill-accent-tertiary');
          background-color: token('fill-accent-tertiary');
        }
        @include e(knob) {
          transform: translateX(18px);
        }
      }
    }
  }

  // 禁用
  @include when(disabled) {
    @include e(wrapper) {
      cursor: not-allowed;
      color: token('text-disabled');
    }
    @include e(track) {
      border-color: token('stroke-control-strong-disabled');
      background-color: token('fill-control-alt-disabled');
    }
    @include e(knob) {
      background-color: token('text-disabled');
    }
    // On
    @include when(on) {
      @include e(track) {
        border: none;
        background-color: token('fill-accent-disabled');
      }
      @include e(knob) {
        background-color: token('text-on-accent-fill-color-disabled');
      }
    }
  }

}